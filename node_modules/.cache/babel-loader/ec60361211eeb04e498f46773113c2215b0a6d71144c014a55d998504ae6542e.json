{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\RestaurantOrder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Input from \"./Components/Input\";\nimport InputDataList from \"./Components/InputDataList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [tableList, setTableList] = useState([]);\n  const [table1, setTable1] = useState([]);\n  const [table2, setTable2] = useState([]);\n  const [table3, setTable3] = useState([]);\n  const addOrderListHandler = (orderprice, orderdish, ordertable, orderid) => {\n    // setTableList((prevOrderList) => {\n\n    // return [...prevOrderList ,{price:orderprice ,dish:orderdish ,table:ordertable,orderid:orderid}]\n\n    // })\n\n    if (ordertable === table1) {\n      setTable1(prevList => {\n        return [...prevList, {\n          price: orderprice,\n          dish: orderdish,\n          table: ordertable,\n          orderid: orderid\n        }];\n      });\n    } else if (ordertable === table2) {\n      setTable2(prevList => {\n        return [...prevList, {\n          price: orderprice,\n          dish: orderdish,\n          table: ordertable,\n          orderid: orderid\n        }];\n      });\n    } else if (ordertable === table3) {\n      setTable3(prevList => {\n        return [...prevList, {\n          price: orderprice,\n          dish: orderdish,\n          table: ordertable,\n          orderid: orderid\n        }];\n      });\n    }\n    setTableList(prevOrderList => {\n      return [...prevOrderList, {\n        setTable1,\n        setTable2,\n        setTable3\n      }];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      onAddOrderList: addOrderListHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputDataList, {\n      table: tableList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Cv72xg+9iZU15qVHEVleff97nnc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Input","InputDataList","jsxDEV","_jsxDEV","App","props","_s","tableList","setTableList","table1","setTable1","table2","setTable2","table3","setTable3","addOrderListHandler","orderprice","orderdish","ordertable","orderid","prevList","price","dish","table","prevOrderList","children","onAddOrderList","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React JS/RestaurantOrder/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nimport Input from \"./Components/Input\";\nimport InputDataList from \"./Components/InputDataList\";\n\nfunction App(props) {\n  const [tableList , setTableList] = useState([]);\n\n  const [table1,setTable1]=useState([]);\n  const [table2,setTable2]=useState([]);\n  const [table3,setTable3]=useState([]);\n\n  const addOrderListHandler = (orderprice ,orderdish,ordertable,orderid ) =>{\n    \n    // setTableList((prevOrderList) => {\n      \n    // return [...prevOrderList ,{price:orderprice ,dish:orderdish ,table:ordertable,orderid:orderid}]\n      \n    // })\n\n    if(ordertable===table1){\n      setTable1(prevList => {\n          return[...prevList,{price:orderprice ,dish:orderdish ,table:ordertable,orderid:orderid}]\n      });\n  }\n  else if(ordertable===table2){\n      setTable2(prevList => {\n          return[...prevList,{price:orderprice ,dish:orderdish ,table:ordertable,orderid:orderid}]\n      });\n  }\n  else if(ordertable===table3){\n      setTable3(prevList => {\n          return[...prevList,{price:orderprice ,dish:orderdish ,table:ordertable,orderid:orderid}]\n      });\n  }\n\n  setTableList((prevOrderList) => {\n      \n    return [...prevOrderList ,{setTable1,setTable2,setTable3}]\n      \n    })\n  }\nreturn (\n    <div>\n      {/* <h2>Let's get started!</h2> */}\n      <Input onAddOrderList={addOrderListHandler} ></Input>\n      <InputDataList table={tableList}></InputDataList>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAGC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE/C,MAAM,CAACU,MAAM,EAACC,SAAS,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACY,MAAM,EAACC,SAAS,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACc,MAAM,EAACC,SAAS,CAAC,GAACf,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAMgB,mBAAmB,GAAGA,CAACC,UAAU,EAAEC,SAAS,EAACC,UAAU,EAACC,OAAO,KAAK;IAExE;;IAEA;;IAEA;;IAEA,IAAGD,UAAU,KAAGT,MAAM,EAAC;MACrBC,SAAS,CAACU,QAAQ,IAAI;QAClB,OAAM,CAAC,GAAGA,QAAQ,EAAC;UAACC,KAAK,EAACL,UAAU;UAAEM,IAAI,EAACL,SAAS;UAAEM,KAAK,EAACL,UAAU;UAACC,OAAO,EAACA;QAAO,CAAC,CAAC;MAC5F,CAAC,CAAC;IACN,CAAC,MACI,IAAGD,UAAU,KAAGP,MAAM,EAAC;MACxBC,SAAS,CAACQ,QAAQ,IAAI;QAClB,OAAM,CAAC,GAAGA,QAAQ,EAAC;UAACC,KAAK,EAACL,UAAU;UAAEM,IAAI,EAACL,SAAS;UAAEM,KAAK,EAACL,UAAU;UAACC,OAAO,EAACA;QAAO,CAAC,CAAC;MAC5F,CAAC,CAAC;IACN,CAAC,MACI,IAAGD,UAAU,KAAGL,MAAM,EAAC;MACxBC,SAAS,CAACM,QAAQ,IAAI;QAClB,OAAM,CAAC,GAAGA,QAAQ,EAAC;UAACC,KAAK,EAACL,UAAU;UAAEM,IAAI,EAACL,SAAS;UAAEM,KAAK,EAACL,UAAU;UAACC,OAAO,EAACA;QAAO,CAAC,CAAC;MAC5F,CAAC,CAAC;IACN;IAEAX,YAAY,CAAEgB,aAAa,IAAK;MAE9B,OAAO,CAAC,GAAGA,aAAa,EAAE;QAACd,SAAS;QAACE,SAAS;QAACE;MAAS,CAAC,CAAC;IAE1D,CAAC,CAAC;EACJ,CAAC;EACH,oBACIX,OAAA;IAAAsB,QAAA,gBAEEtB,OAAA,CAACH,KAAK;MAAC0B,cAAc,EAAEX;IAAoB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,eACrD3B,OAAA,CAACF,aAAa;MAACsB,KAAK,EAAEhB;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAiB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7C;AAEV;AAACxB,EAAA,CA5CQF,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}